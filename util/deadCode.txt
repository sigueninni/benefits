<!-- <Label
                text="{i18n>requestType}"
                required="true"
                labelFor="positionRequestType"
            />

            <Select
                fieldGroupIds="positionRequestType"
                forceSelection="false"
                items="{
                                        path : '/RequestTypeSet',
                                        sorter: {
                                            path: 'Type',
                                            descending: true
                                        },
                                        filters : [
                                            { path : 'ReqFlow', operator : 'EQ', value1 :'c' }
                                        ]
                                        }"
                selectedKey="{ReqType}"
                enabled="{RequestSettings/IsFormEditable}"
                visible="{= ${ReqFlow} === 'c' }"
            >
                <core:Item
                    text="{Description}"
                    key="{Type}"
                />
            </Select>

            <Select
                fieldGroupIds="positionRequestType"
                forceSelection="false"
                items="{
                                        path : '/RequestTypeSet',
                                        sorter: {
                                            path: 'Type',
                                            descending: true
                                        },  
                                        filters : [
                                            { path : 'ReqFlow', operator : 'EQ', value1 :'u' }
                                        ]
                                    }"
                selectedKey="{ReqType}"
                enabled="{RequestSettings/IsFormEditable}"
                change=""
                visible="{= ${ReqFlow} === 'u' }"
            >
                <core:Item
                    text="{Description}"
                    key="{Type}"
                />
            </Select>
            <!-- </l:VerticalLayout> -->
            <Label
                text="{i18n>contractType}"
                required="true"
                labelFor="contractType"
            />
            <Select
                id="contractType"
                forceSelection="false"
                items="{/ContratTypeSet}"
                selectedKey="{ContractType}"
                enabled="{RequestSettings/IsFormEditable}"
                change=".onContractTypeChange"
            >
                <core:Item
                    text="{Description}"
                    key="{Type}"
                />
            </Select>
            <Label
                text="{i18n>durationMonths}"
                wrapping="true"
            />
            <StepInput
                min="0"
                max="99"
                step="0.5"
                value="{DurationInMonths}"
                displayValuePrecision="1"
                visible="{= ${ContractType} === 'CDD' }"
                change=".onDurationMonthsChange"
            />
            <!-- End Dynamic type of position Request-->
            <core:Title text="{i18n>Dates}" />
            <!-- <l:VerticalLayout> -->
            <Label
                text="{i18n>startDate}"
                required="true"
                labelFor="startDate"
            />
            <DatePicker
                id="startDate"
                value="{ path: 'StartDate', type: 'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true, relative: false, pattern: 'dd/MM/yyyy', UTC: true }}"
                editable="{RequestSettings/IsFormEditable}"
                required="true"
                minDate="{datesModel>/MinDate}"
                maxDate="{datesModel>/MaxDate}"
                change=".onStartDateChange"
            />
            <Label
                text="{i18n>endDate}"
                required="true"
                labelFor="endDate"
            />
            <DatePicker
                id="endDate"
                value="{ path: 'EndDate', type: 'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true, relative: false, pattern: 'dd/MM/yyyy', UTC: true }}"
                editable="false"
                required="true"
                change="updateAmounts"
            />
            <!-- job Part -->
            <core:Title text="{i18n>JobAssignment}" />
            <Label
                text="{i18n>jobArea}"
                required="true"
                labelFor="jobArea"
            />
            <Select
                id="jobArea"
                forceSelection="false"
                items="{/JobAreaSet}"
                selectedKey="{JobArea}"
                enabled="{RequestSettings/IsFormEditable}"
                change=".onJobAreaChange"
            >
                <core:Item
                    text="{Description}"
                    key="{Type}"
                />
            </Select>

            <Label
                text="{i18n>jobGroup}"
                labelFor="jobGroup"
            />
            <Input
                id="jobGroup"
                type="Text"
                value="{JobGroup}"
                maxLength="8"
                showValueHelp="true"
                valueHelpOnly="true"
                valueHelpRequest=".onJobGroupValueHelpPress"
                editable="{RequestSettings/IsFormEditable}"
                visible="{= ${JobArea} !== '' }"
                required="true"
            />

            <Label
                text="{i18n>job}"
                labelFor="job"
            />
            <Input
                id="job"
                type="Text"
                value="{Job}"
                maxLength="8"
                showValueHelp="true"
                valueHelpOnly="true"
                valueHelpRequest=".onJobValueHelpPress"
                editable="{RequestSettings/IsFormEditable}"
                visible="{= ${JobGroup} !== '' }"
                required="true"
            />
            <Label
                text="{i18n>range}"
                required="true"
                labelFor="range"
            />
            <Select
                id="range"
                forceSelection="false"
                items="{/RangeTypeSet}"
                selectedKey="{Range}"
                enabled="{RequestSettings/IsFormEditable}"
                visible="{= ${Job} !== '' &amp;&amp;  ${uiSettings>/rangeVisible}  }"
                change=".onRangeChange"
            >
                <core:Item
                    text="{Description}"
                    key="{Type}"
                />
            </Select>
            <core:Title text="{i18n>CandidateInformations}" />
            <Label
                text="{i18n>candidateName}"
                labelFor="candiateName"
            />
            <Input
                id="candidateName"
                type="Text"
                value="{NameCandidate}"
            /> -->



            <core:FragmentDefinition
    xmlns:core="sap.ui.core"
    xmlns="sap.m"
    xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
>
    <Dialog
        id="typeReq"
        title="{i18n>ChooseReqType}"
        type="Message"
    >
        <content>
            <VBox>
                <Label text="{i18n>requestType}" required="true" labelFor="requestTypeSelect"/>
<!--                 <Select
                    id="requestTypeSelect"
                    items="{/RequestTypeVHSet}"
                    selectedKey="{TypeReq}"
                    change=".onRequestTypeChange"
                >
                    <core:Item key="{Id}" text="{Name}" />
                </Select> -->

                                <Select
                                        id="requestTypeSelect"
                                        forceSelection="false"
                                        items="{/RequestTypeVHSet}"
                                        selectedKey="{TypeReq}"
                                        enabled="{RequestSettings/IsFormEditable}"
                                        change=".onRequestTypeChange"
                                    >
                                        <core:Item
                                            text="{Id}"
                                            key="{Name}"
                                        />
                                    </Select>


                <VBox visible="{= ${TypeReq} === 'education' }">
                    <Label text="{i18n>child}" required="true" labelFor="childSelect"/>
                    <Select
                        id="childSelect"
                        items="{/ChildSet}"
                        selectedKey="{SelectedChild}"
                        change=".onChildChange"
                    >
                        <core:Item key="{ChildId}" text="{ChildName}" />
                    </Select>

                    <Label text="{i18n>chooseOption}" required="true"/>
                    <RadioButtonGroup
                        id="claimAdvanceGroup"
                        selectedIndex="{ClaimAdvanceIndex}"
                        columns="2"

                        <buttons>
                            <RadioButton text="{i18n>claim}" />
                            <RadioButton text="{i18n>advance}" />
                        </buttons>
                    </RadioButtonGroup>
                </VBox>
            </VBox>
        </content>
        <beginButton>
            <Button
                text="{i18n>confirm}"
                press="onConfirmTypeFlowButtonPress"
            />
        </beginButton>
        <endButton>
            <Button
                customData:name="_oTypeFlowDialog"
                text="{i18n>cancel}"
                press="onCancel"
            />
        </endButton>
    </Dialog>
</core:FragmentDefinition>




dans master dans letete !

                        // OK → retrieve the created entry
                        const change = batch.__changeResponses && batch.__changeResponses[0];                 }

                        // OK → retrieve the created entry
                        const change = batch.__changeResponses && batch.__changeResponses[0];           if (err) {
                            this._showODataError(); // always generic
                            return;
                        }

                        // OK → retrieve the created entry
                        const change = batch.__changeResponses && batch.__changeResponses[0];               }

                        // OK → retrieve the created entry
                        const change = batch.__changeResponses && batch.__changeResponses[0];
                        if (!change || !change.data) {
                            this._showODataError(); // security                    // OK → retrieve the created entry                  }

                        // OK → retrieve the created entry
                        const change = batch.__changeResponses && batch.__changeResponses[0];                      // OK → retrieve the created entry                       // OK → retrieve the created entry                  		    *-->